import Graphics2D;
import ImageResources;
import Math;
import Random;

const MAX_POKEMON = 6;
const TOWN_SCALE = 0.5;

class Person {
	field texture;
	field texture_sm;
	
	field x;
	field y;
	field width;
	field height;
	
	field pokelist;
	field pokecount = 0;
	
	field activePkm;
	
	constructor(textureRef, pkm = null) {
		this.texture = textureRef;
		this.texture_sm = textureRef.scale(Math.floor(TOWN_SCALE * textureRef.width), Math.floor(TOWN_SCALE * textureRef.height));
		this.width = this.texture_sm.width;
		this.height = this.texture_sm.height;
		this.pokelist = [null] * MAX_POKEMON;
		
		if(pkm != null) {
			this.addPokemon(pkm.getPokemon(Random.randomInt(0, 4)));
			this.addPokemon(pkm.getPokemon(Random.randomInt(0, 4)));
			this.addPokemon(pkm.getPokemon(Random.randomInt(0, 4)));
			this.addPokemon(pkm.getPokemon(Random.randomInt(0, 4)));
		}
	}
	
	function onGameLoop(offX = 0, offY = 0) {
		this.texture_sm.draw(this.x + offX, this.y + offY);
	}
	
	function intersects(other) {
		return (
					(this.x > other.x && this.x < other.x + other.width)
					|| (this.x + this.width > other.x && this.x + this.width < other.x + other.width)
				) && (
					(this.y > other.y && this.y < other.y + other.height)
					|| (this.y + this.height > other.y && this.y + this.height < other.y + other.height)
				);
	}
	
	function addPokemon(pkm) {
		for(i = 0; i < this.pokelist.length; i++) {
			if(this.pokelist[i] == null) {
				this.pokelist[i] = pkm;
				this.pokecount++;
				if(this.pokecount == 1)
					this.activePkm = pkm;
				return;
			}
		}
	}
	
	function checkPkm() {
		if(this.activePkm.isDead()) {
			for(i = 0; i < this.pokelist.length; i++) {
				pkm = this.pokelist[i];
				if(pkm != null && !pkm.isDead()) {
					this.activePkm = pkm;
					return;
				}
			}
		}
	}
}